Search.setIndex({"docnames": ["CHANGELOG", "CONTRIBUTING", "LICENSE", "README", "fagus", "fagus.fagus", "fagus.filters", "fagus.iterators", "fagus.utils", "index"], "filenames": ["CHANGELOG.rst", "CONTRIBUTING.rst", "LICENSE.rst", "README.rst", "fagus.rst", "fagus.fagus.rst", "fagus.filters.rst", "fagus.iterators.rst", "fagus.utils.rst", "index.rst"], "titles": ["Changelog", "Contributing to Fagus", "ISC License", "Fagus", "fagus package", "fagus.fagus module", "fagus.filters module", "fagus.iterators module", "fagus.utils module", "Welcome to Fagus\u2019s documentation!"], "terms": {"2023": 0, "08": 0, "20": 0, "1": [0, 1, 3, 4, 5, 7], "fix": [0, 1, 4, 5], "some": [0, 1, 3, 4, 5, 6], "error": [0, 1, 3, 8], "document": [0, 1], "introduc": 0, "0": [0, 3, 4, 5, 6, 7], "remov": [0, 1, 4, 5, 9], "caret": 0, "depend": [0, 9], "python": [0, 1, 3, 4, 5, 8], "3": [0, 1, 3, 4, 5, 8], "6": [0, 1, 3], "so": [0, 3, 4, 5, 6], "now": [0, 1, 3], "i": [0, 2, 4, 5, 6, 7, 8, 9], "compat": [0, 1], "ani": [0, 1, 2, 3, 4, 5, 6, 7, 8], "futur": 0, "version": [0, 1], "ensur": [0, 1, 4, 5, 9], "typealia": [0, 8], "also": [0, 1, 3, 4, 5, 6], "work": [0, 1, 4, 5, 9], "readthedoc": 0, "ad": [0, 1, 4, 5, 9], "automat": [0, 1, 3], "updat": [0, 1, 4, 5, 9], "toc": 0, "readm": [0, 1, 3, 4, 5, 6, 9], "contribut": [0, 9], "19": 0, "strong": 0, "type": [0, 4, 5, 6, 7, 8], "more": [0, 1, 3, 4, 5], "mypi": 0, "build": [0, 1, 3], "correct": [0, 1, 8], "whole": [0, 3, 4, 6], "librari": [0, 1, 3, 4, 8], "consequ": [0, 3], "wa": [0, 3, 4, 5, 7, 8], "make": [0, 1, 3, 4, 5, 6], "fagu": 0, "option": [0, 4, 5, 6, 7, 8, 9], "clear": [0, 3, 4, 5, 9], "optstr": [0, 4, 5, 8], "optbool": [0, 4, 5, 8], "optint": [0, 4, 5, 8], "optani": [0, 4, 5, 8], "clearli": [0, 3], "declar": 0, "what": [0, 1, 4, 5, 6, 9], "mean": [0, 3, 4, 5, 8], "strongli": 0, "extern": [0, 1], "type_extens": 0, "74": 0, "10": [0, 3, 4, 6, 8], "thi": [0, 1, 2, 3, 4, 5, 6, 7, 8], "necessari": [0, 1, 3, 4, 5, 6], "support": [0, 1, 3, 4, 5, 7], "howev": [0, 3, 4, 6], "which": [0, 1, 3, 4, 5, 7, 8], "releas": [0, 3], "june": 0, "2019": 0, "kept": 0, "open": [0, 1], "forgiv": 0, "possibl": [0, 1, 3, 4, 5, 7], "For": [0, 3, 4, 5, 9], "still": [0, 1, 9], "ha": [0, 1, 3, 4, 5, 8], "renam": 0, "fagusopt": [0, 3, 4, 5, 8], "value_split": 0, "path_split": [0, 4, 5], "descript": [0, 1], "do": [0, 3, 4, 5], "all": [0, 1, 2, 3, 4, 5, 6], "differ": [0, 3, 4, 5, 6], "": [0, 1, 3, 4, 5, 6], "ar": [0, 1, 3, 4, 5, 6, 7], "properli": [0, 1], "well": [0, 1, 3, 7], "basic": [0, 6, 9], "set": [0, 4, 5, 6, 7, 8, 9], "get": [0, 1, 3, 4, 5, 6, 9], "add": [0, 1, 4, 5, 9], "insert": [0, 4, 5, 9], "extend": [0, 4, 5, 9], "function": [0, 1, 3, 4, 5, 6, 7, 8], "2022": [0, 2], "05": 0, "13": 0, "github": [0, 1], "final": [0, 1, 3, 4, 5], "The": [0, 1, 4, 5, 7, 8, 9], "complet": [0, 1, 3, 4, 6], "readi": [0, 9], "time": [0, 1, 3, 4, 5], "feedback": 0, "from": [0, 1, 2, 3, 4, 5], "commun": [0, 1], "04": 0, "check": [0, 1, 3, 4, 5, 6], "found": [0, 1, 3, 4, 5], "alreadi": [0, 1, 3, 4, 5], "were": [0, 3], "sever": [0, 3, 4, 5], "other": [0, 1, 2, 3, 4, 5], "program": 0, "have": [0, 1, 3, 4, 5, 6, 7, 8], "treeo": 0, "name": [0, 3, 4, 5, 8], "had": 0, "chosen": [0, 3], "origin": [0, 1], "anoth": [0, 3, 4, 5, 8], "much": 0, "cooler": 0, "wasn": [0, 3], "t": [0, 1, 3, 4, 5, 6, 8], "us": [0, 2, 3, 4, 5, 6, 7, 8], "yet": [0, 1, 3], "9": [0, 3], "closer": 0, "develop": [0, 9], "been": [0, 1, 3, 8], "ongo": 0, "almost": 0, "year": 0, "test": [0, 9], "take": [0, 1, 3, 8], "absolut": 0, "like": [0, 1, 3, 4, 5], "move": 0, "awai": [0, 3], "two": [0, 3, 4, 5], "file": [0, 1, 3, 4, 5], "one": [0, 1, 3, 4, 5, 6], "lib": 0, "proper": 0, "poetri": [0, 1], "project": [0, 1], "start": [0, 3, 4, 5], "implement": [0, 3, 4, 5], "sphinx": [0, 1], "pars": [0, 4, 5], "docstr": [0, 1, 3, 4, 5], "written": 0, "earlier": 0, "2021": 0, "06": 0, "first": [0, 1, 3, 4, 5], "idea": [0, 3], "born": 0, "write": [0, 3], "my": [0, 1], "bachelor": 0, "thesi": 0, "where": [0, 3, 4, 5], "felt": 0, "constantli": 0, "b": [0, 1, 3, 4, 5, 6], "c": [0, 1, 2, 3, 4, 5], "too": [0, 4, 5], "annoi": 0, "go": [0, 1], "off": 1, "welcom": 1, "thank": 1, "you": [1, 3, 4, 5, 6, 7], "big": 1, "small": 1, "peopl": 1, "benefit": 1, "follow": [1, 3, 4], "host": 1, "treeorg": 1, "organis": 1, "thei": [1, 3, 4, 5, 6], "mostli": 1, "rule": [1, 3], "discuss": [1, 7], "your": [1, 3, 7], "best": [1, 3], "judgement": 1, "feel": 1, "free": 1, "propos": 1, "chang": [1, 3, 4, 5], "tabl": [1, 3], "content": [1, 3, 4, 5], "No": [1, 3], "run": [1, 3, 4, 5], "nativ": 1, "without": [1, 2, 3, 4, 5], "3rd": 1, "parti": 1, "modul": [1, 3, 4, 9], "argument": [1, 3, 4, 5, 6], "class": [1, 3, 4, 5, 6, 7, 8], "shall": [1, 2, 3, 4, 5, 6], "mani": [1, 3], "edg": 1, "case": [1, 3, 4, 5, 6, 8], "It": [1, 3, 4, 6], "never": [1, 4, 5], "imagin": [1, 3], "e": [1, 3, 4, 5, 6], "g": [1, 3, 4, 5, 6], "should": [1, 3, 4, 5, 6], "prevent": [1, 3, 4, 5], "being": [1, 3], "reintroduc": 1, "consist": [1, 3], "common": [1, 3, 4, 5], "structur": [1, 3], "static": [1, 4, 5, 7, 9], "instanc": [1, 8, 9], "except": [1, 3, 4, 5, 6], "__internals__": 1, "abl": [1, 3], "obj": [1, 4, 5, 7], "simpl": [1, 3], "effici": 1, "If": [1, 3, 4, 5, 6, 7, 8], "suggest": 1, "section": [1, 3], "guid": 1, "through": [1, 3, 4, 5, 7], "help": [1, 3], "maintain": [1, 3], "understand": 1, "reproduc": 1, "behavior": 1, "find": [1, 3], "relat": 1, "faq": 1, "list": [1, 4, 5, 6, 7, 8, 9], "question": [1, 3], "problem": [1, 3], "issu": 1, "see": [1, 3, 4, 5, 6], "comment": [1, 3], "exist": [1, 3, 4, 5], "instead": [1, 3, 4, 5], "close": 1, "seem": [1, 3], "same": [1, 3, 4, 5, 6], "thing": [1, 3], "re": [1, 3, 4, 6, 7], "experienc": 1, "includ": [1, 2, 3, 4, 5, 6], "link": 1, "bodi": 1, "track": 1, "when": [1, 3, 4, 5, 7, 8], "creat": [1, 4, 5], "pleas": 1, "detail": [1, 3], "particular": [1, 4, 5], "data": [1, 2, 3, 4, 5], "fill": [1, 3, 4, 5], "out": [1, 2, 3, 4, 5], "requir": [1, 4, 5, 8], "templat": 1, "inform": [1, 3, 4, 5], "ask": [1, 3], "u": [1, 4, 5], "resolv": [1, 3], "faster": 1, "an": [1, 2, 4, 5, 6, 8, 9], "enhanc": 1, "minor": 1, "improv": 1, "probabl": 1, "solut": 1, "give": [1, 3, 4, 6, 7], "priorit": [1, 4, 5], "would": [1, 3, 4, 5], "old": [1, 4, 5], "better": 1, "judg": 1, "show": [1, 3], "least": [1, 4, 6], "2": [1, 3, 4, 5], "manag": 1, "deploy": 1, "instruct": 1, "instal": 1, "step": [1, 3], "git": 1, "checkout": 1, "repo": 1, "id": 1, "intellij": 1, "pycharm": 1, "Not": 1, "mandatori": 1, "handi": [1, 3], "modifi": [1, 2, 4, 5, 7, 9], "debugg": 1, "itself": [1, 3, 4, 5], "smoothen": 1, "process": 1, "pyproject": 1, "toml": 1, "format": 1, "pep": 1, "8": [1, 3], "standard": 1, "line": [1, 3, 4, 5], "length": [1, 3, 4, 5, 6], "120": 1, "charact": [1, 3], "correctli": [1, 4, 6], "black": 1, "py": 1, "verifi": [1, 3, 4, 6, 8], "flake8": 1, "tool": 1, "onli": [1, 3, 4, 5, 7], "wrong": 1, "ll": 1, "yourself": 1, "public": 1, "googl": 1, "messag": [1, 8], "sure": [1, 3, 4, 5], "coverag": 1, "etc": [1, 4, 5, 7], "unittest": 1, "lot": [1, 3], "prior": [1, 8], "accept": [1, 3, 4, 5], "repositori": 1, "http": 1, "com": 1, "cd": 1, "here": [1, 3, 4, 5, 6, 8], "might": [1, 3], "reopen": 1, "termin": 1, "after": [1, 3, 4, 5], "sourc": 1, "bashrc": 1, "linux": 1, "shell": 1, "command": 1, "eval": 1, "pyenv": 1, "init": 1, "path": [1, 4, 5, 9], "just": [1, 3, 4, 5], "we": [1, 3], "later": 1, "mode": 1, "execut": [1, 4, 5], "hasn": [1, 3, 8], "consol": 1, "avail": [1, 3], "python3": 1, "m": 1, "discov": 1, "them": [1, 3, 4, 5], "As": [1, 3], "gener": [1, 3, 4, 5], "veri": [1, 3], "import": [1, 3, 4, 5], "doctest": [1, 3], "defin": [1, 3, 4, 5, 6, 7, 8], "md": [1, 4, 5], "test_fagu": [1, 3], "stage": 1, "dry": 1, "miss": 1, "trail": 1, "whitespac": 1, "observ": 1, "back": [1, 3], "repeat": 1, "until": [1, 3, 4, 5], "green": 1, "cz": 1, "fail": [1, 3, 4, 5], "reject": 1, "d": [1, 3, 4, 5, 6], "retyp": 1, "To": [1, 3, 4, 5], "beforehand": 1, "changelog": [1, 9], "made": 1, "manual": [1, 3, 4, 5], "root": [1, 3, 4, 5, 7, 9], "folder": 1, "bdlp": 1, "v": [1, 4, 5], "number": [1, 3, 4, 5], "increment": 1, "upload": 1, "doe": [1, 3, 4, 5, 8], "l": [1, 3, 4, 5], "pdf": 1, "p": 1, "everyth": [1, 4, 6], "alright": 1, "publish": 1, "either": [1, 3, 4, 5, 7], "put": [1, 3, 4, 5, 6, 7], "major": 1, "backward": 1, "incompat": 1, "wai": [1, 3, 4, 5, 6, 8], "patch": 1, "mention": [1, 4, 5], "correspond": 1, "present": [1, 3, 4, 5, 7], "equal": 1, "accordingli": 1, "rerun": 1, "paramet": [1, 4, 5, 6, 7, 8, 9], "warn": 1, "thrown": [1, 8], "especi": [1, 3], "while": [1, 3], "than": [1, 3, 4, 6], "target": 1, "cross": 1, "refer": [1, 3, 4, 5, 6, 7, 8], "fil": [1, 4, 5, 6, 7, 9], "filter": [1, 4, 5, 7, 9], "main": [1, 3], "branch": 1, "easiest": 1, "directli": [1, 3, 4, 5], "titl": 1, "text": 1, "pr": 1, "doesn": [1, 3, 4, 5, 6, 8], "allow": [1, 3, 4, 5], "access": [1, 3], "token": 1, "account": 1, "Then": [1, 4, 5], "config": 1, "configur": [1, 3], "copyright": 2, "luka": 2, "neuenschwand": 2, "permiss": 2, "copi": [2, 4, 5, 7, 9], "distribut": 2, "softwar": [2, 9], "purpos": 2, "fee": 2, "herebi": 2, "grant": 2, "provid": [2, 3, 4, 5, 6, 8], "abov": [2, 3, 4, 5], "notic": 2, "appear": [2, 4, 5, 6], "THE": 2, "AS": 2, "AND": 2, "author": 2, "disclaim": 2, "warranti": 2, "WITH": 2, "regard": 2, "TO": 2, "impli": 2, "OF": 2, "merchant": 2, "fit": [2, 8], "IN": [2, 9], "NO": 2, "event": 2, "BE": 2, "liabl": 2, "FOR": 2, "special": [2, 3, 4, 6], "direct": 2, "indirect": 2, "OR": 2, "consequenti": 2, "damag": 2, "whatsoev": 2, "result": [2, 3, 4, 5, 6], "loss": 2, "profit": 2, "whether": [2, 3, 4, 5, 6, 7, 8], "action": 2, "contract": 2, "neglig": 2, "tortiou": 2, "aris": 2, "connect": 2, "perform": [2, 3], "These": 3, "dai": 3, "most": [3, 4, 5], "convert": [3, 4, 5], "sent": 3, "forth": 3, "api": 3, "often": 3, "deepli": [3, 4, 5], "easier": [3, 4, 6], "travers": [3, 4, 5], "edit": [3, 4, 5], "call": [3, 4, 5, 7], "intern": [3, 4, 5, 7], "actual": [3, 4, 6], "latin": 3, "genu": 3, "beech": 3, "featur": [3, 9], "done": [3, 7, 8], "good": 3, "cours": 3, "bug": [3, 9], "report": [3, 9], "even": [3, 4, 5], "though": 3, "base": [3, 4, 5, 6, 7, 8], "trial": 3, "sth": 3, "unclear": 3, "soon": 3, "fun": 3, "want": [3, 4, 5, 6], "fetch": [3, 4, 5], "valu": [3, 4, 5, 6, 7, 8, 9], "shown": 3, "below": 3, "a1": 3, "b1": 3, "c1": 3, "b2": 3, "4": 3, "a2": 3, "d1": 3, "print": 3, "far": 3, "b3": 3, "c2": 3, "becaus": 3, "traceback": 3, "recent": 3, "last": [3, 4, 5, 6], "keyerror": [3, 4, 5], "consecut": 3, "squar": 3, "bracket": 3, "There": 3, "around": [3, 4, 5], "surround": 3, "each": [3, 4, 5, 6, 7], "statement": 3, "try": [3, 4, 5], "both": [3, 4, 5], "hard": 3, "verbos": 3, "how": [3, 4, 5, 9], "none": [3, 4, 5, 6, 7, 8], "kei": [3, 4, 5, 6, 7, 9], "need": [3, 4, 5, 7], "return": [3, 4, 5, 6, 7, 8], "In": [3, 4, 5, 6, 8], "specifi": [3, 4, 5, 6, 8], "built": 3, "replac": [3, 4, 5], "tediou": 3, "prone": 3, "few": 3, "rather": [3, 4, 5, 6], "rais": [3, 4, 5, 6, 8], "programm": 3, "intent": 3, "concept": 3, "map": [3, 4, 5], "opposit": 3, "layer": 3, "5": 3, "v1": 3, "fg": 3, "v2": 3, "tupl": [3, 4, 5, 6, 7], "second": [3, 4, 5], "third": 3, "wherea": 3, "fourth": 3, "string": [3, 4, 5, 6], "conveni": [3, 4, 5], "split": [3, 4, 5, 9], "up": [3, 4, 5, 9], "exampl": [3, 4, 5, 6], "custom": [3, 8], "seen": 3, "befor": [3, 4, 5], "pass": [3, 4, 5, 6, 7, 8], "yield": 3, "instanti": [3, 4, 5], "neat": 3, "shortcut": 3, "x": [3, 4, 5, 8], "y": 3, "z": 3, "subnod": [3, 4, 5, 6], "del": 3, "notat": 3, "On": 3, "further": 3, "equival": [3, 4, 5], "item": [3, 4, 5, 7, 9], "dot": 3, "activ": 3, "str": [3, 4, 5, 6, 8], "must": [3, 4, 5], "preced": [3, 4, 5], "underscor": 3, "due": 3, "limit": [3, 4, 5], "_4": 3, "wrapper": [3, 4, 5], "insid": 3, "7": 3, "altern": 3, "across": [3, 8], "steer": 3, "behaviour": [3, 4, 5], "similar": 3, "intend": 3, "applic": [3, 4, 5], "part": 3, "come": 3, "onc": 3, "One": 3, "contain": [3, 4, 5, 6, 7, 8, 9], "block": 3, "four": 3, "level": [3, 4, 5, 7, 8], "higher": 3, "lower": 3, "hardcod": 3, "appli": [3, 4, 5], "aren": 3, "overriden": 3, "highest": 3, "overrid": 3, "overridden": [3, 6], "reset": [3, 4, 5], "its": [3, 4, 5, 6], "arg": [3, 4, 6], "alwai": [3, 4, 5], "win": 3, "three": [3, 4, 5], "constructor": [3, 4, 5, 6], "don": [3, 4, 5, 6], "child": [3, 4, 5, 9], "inherit": [3, 4, 5], "parent": [3, 4, 5], "remain": [3, 7], "explain": 3, "request": [3, 9], "q": [3, 4, 5], "A": [3, 4, 5, 8, 9], "instanci": 3, "empti": [3, 4, 5], "about": [3, 4, 5], "_none": [3, 4, 5, 6, 7], "omit": 3, "extra": [3, 6], "true": [3, 4, 5, 6, 8], "note": [3, 4, 5], "v3": 3, "bool": [3, 4, 5, 6, 7, 8], "fals": [3, 4, 5, 6, 7, 8], "singl": [3, 4, 5], "anyth": [3, 4, 5], "els": 3, "callabl": [3, 4, 5, 7, 8], "lambda": [3, 4, 5, 8], "determin": [3, 4, 5, 6], "inact": 3, "constant": 3, "happen": 3, "leaf": [3, 4, 5, 6], "depth": [3, 4, 5], "valueerror": [3, 4, 5, 8], "enough": 3, "unpack": [3, 4, 5], "expect": [3, 8], "got": 3, "loop": [3, 4, 5, 7], "That": [3, 4, 5], "shorter": 3, "With": 3, "place": [3, 4, 5], "12": 3, "15": 3, "max_depth": [3, 4, 5, 7], "know": 3, "scheme": 3, "key1": [3, 4, 5], "key2": [3, 4, 5], "key3": 3, "addition": [3, 7], "node2": [3, 4, 5], "sometim": 3, "relev": 3, "combin": 3, "inf": [3, 4], "infin": 3, "sy": [3, 4, 5], "maxsiz": [3, 4], "max": 3, "int": [3, 4, 5, 6, 7, 8], "By": [3, 4, 5], "consid": 3, "insert_1": 3, "desir": 3, "pictur": 3, "background": 3, "insert_2": 3, "insert_3": 3, "again": 3, "posit": [3, 4, 5], "zero": 3, "insert_4": 3, "precis": 3, "care": 3, "preserv": 3, "overview": 3, "dl": 3, "affect": [3, 4, 5], "resign": 3, "within": 3, "therefor": 3, "letter": 3, "ldl": 3, "point": [3, 4, 5], "overwritten": [3, 4, 5], "ddddddddd": 3, "interpret": [3, 4, 5, 6], "meaning": [3, 7], "easi": 3, "ignor": [3, 4, 6], "six": 3, "partli": 3, "undefin": [3, 6], "treat": [3, 4, 5, 6], "space": [3, 4, 5], "_": [3, 4, 6], "a_c_1": 3, "_0_2": 3, "prefix": 3, "__": 3, "example_index__another_index": 3, "example_index": 3, "another_index": 3, "easili": [3, 4], "retriev": [3, 4, 5], "read": 3, "subsect": 3, "logic": 3, "behind": [3, 4, 5], "creation": 3, "littl": 3, "demonstr": 3, "neg": [3, 4, 5], "specif": [3, 4, 5], "prepend": 3, "10000": 3, "bigger": 3, "len": 3, "smaller": 3, "minu": 3, "order": [3, 4, 5], "middl": 3, "assign": 3, "oper": 3, "certain": [3, 4, 5, 6], "cannot": [3, 8], "thu": [3, 4, 5], "could": 3, "But": 3, "did": 3, "keep": [3, 4, 5, 8], "unmodify": 3, "seven": 3, "modify": 3, "resid": 3, "outer": 3, "li": 3, "outermost": 3, "touch": 3, "anywher": 3, "whereev": 3, "fine": 3, "tune": 3, "hello": [3, 4, 5], "0_good_morn": 3, "morn": 3, "_1_ciao": 3, "byeby": 3, "variabl": 3, "digit": 3, "ciao": 3, "0_good_even": 3, "night": 3, "collect": [3, 4, 5, 6, 7], "plant": 3, "daffodil": 3, "flower": 3, "pine": 3, "softwood": 3, "categori": 3, "rose": 3, "oak": 3, "hardwood": 3, "belong": 3, "pratic": 3, "isn": [3, 4, 5, 6, 8], "worri": 3, "initi": [3, 4, 5, 6, 7, 8], "next": [3, 6, 7], "fir": 3, "forest": 3, "tulip": 3, "prepar": 3, "sunflow": 3, "sort": 3, "irrelev": 3, "agil": 3, "situat": 3, "lili": 3, "won": [3, 4, 5], "neither": 3, "addit": 3, "lavend": 3, "daisi": 3, "orchid": 3, "fact": 3, "end": [3, 4, 5], "normal": [3, 4, 5], "occurr": 3, "sorted_set": 3, "kind": 3, "determinist": 3, "readabl": 3, "garden": 3, "appl": 3, "stai": [3, 4, 5], "illustr": 3, "fruit": 3, "lemon": 3, "previou": 3, "detect": 3, "mai": 3, "ambigu": 3, "reason": 3, "nest": [4, 5, 9], "object": [4, 5, 6, 7, 8, 9], "dict": [4, 5, 9], "can": [4, 5, 6, 7, 9], "complex": [4, 5, 7], "cfil": [4, 6, 9], "vfil": [4, 6, 9], "alia": [4, 8], "indic": [4, 5, 6, 8], "element": [4, 5, 6, 9], "append": [4, 5, 9], "iter": [4, 5, 9], "util": [4, 7, 9], "helper": [4, 5, 8], "method": [4, 5, 6, 7], "node_typ": [4, 5], "ellipsi": [4, 5, 8], "list_insert": [4, 5], "default_node_typ": [4, 5], "default": [4, 5, 6, 8], "if_": [4, 5], "iter_fil": [4, 5, 7], "mod_funct": [4, 5], "union": [4, 5, 7, 8], "mutablemap": [4, 5], "mutablesequ": [4, 5], "mutableset": [4, 5], "top": [4, 5], "med": [4, 5], "node": [4, 5, 6, 7, 9], "sens": [4, 5, 6], "mark": [4, 5], "increas": [4, 5], "thorough": [4, 5], "__init__": [4, 5, 6, 7, 8, 9], "wrap": [4, 5], "along": [4, 5], "suppos": [4, 5], "ist": [4, 5], "ict": [4, 5], "dll": [4, 5], "enforc": [4, 5], "otherwis": [4, 5, 6], "new": [4, 5, 9], "index": [4, 5, 6, 9], "explan": [4, 5], "meet": [4, 5, 8], "condit": [4, 5], "noth": [4, 5], "exactli": [4, 5], "max_item": [4, 5], "long": [4, 5], "serial": [4, 5, 9], "ipaddress": [4, 5], "ipv4address": [4, 5], "ipv6address": [4, 5], "pointer": [4, 5], "tfunc": [4, 5], "complic": [4, 5], "plain": [4, 5], "ex": [4, 5], "__call__": [4, 5, 9], "f": [4, 5, 8], "At": [4, 5], "pick": [4, 5], "2nd": [4, 5], "integ": [4, 5], "hashabl": [4, 5], "separ": [4, 5], "recurs": [4, 5, 6, 7], "self": [4, 5, 6, 8], "independ": [4, 5], "shallow": [4, 5], "9223372036854775807": [4, 5, 7], "filter_": [4, 5, 7], "select": [4, 5, 6, 7], "iter_nod": [4, 5, 7], "filter_end": [4, 5, 7], "fagusiter": [4, 5, 7], "deep": [4, 5], "goe": [4, 5], "max_siz": [4, 5], "effect": [4, 5], "maxitem": [4, 5], "over": [4, 5, 7, 9], "info": [4, 5], "leav": [4, 5], "count": [4, 5, 9], "vari": [4, 5], "extract": [4, 5], "reduc": [4, 5], "disturb": [4, 5], "node1": [4, 5], "leaf_valu": [4, 5], "unfilt": [4, 5], "criteria": [4, 5], "rel": [4, 5], "typeerror": [4, 5, 6, 8], "frozenset": [4, 5], "sub": [4, 5, 6], "setdefault": [4, 5, 9], "mod": [4, 5, 9], "replace_valu": [4, 5], "kitchen": [4, 5], "spoon": [4, 5], "deactiv": [4, 5], "mod_al": [4, 5, 9], "match": [4, 5, 6], "maximum": [4, 5], "didn": [4, 5, 8], "json": [4, 5, 9], "yaml": [4, 5, 9], "float": [4, 5], "whose": [4, 5, 6], "datetim": [4, 5], "isoformat": [4, 5], "date": [4, 5], "represent": [4, 5], "serializ": [4, 5, 9], "tuple_kei": [4, 5], "occur": [4, 5], "merg": [4, 5, 9], "new_value_act": [4, 5], "r": [4, 5], "extend_from": [4, 5], "update_from": [4, 5], "copy_obj": [4, 5], "tree": [4, 5, 6, 7, 9], "eplac": [4, 5], "gnore": [4, 5], "ppend": [4, 5], "aggreg": [4, 5], "compar": [4, 5], "isf": [4, 5], "infinit": [4, 5], "pop": [4, 5, 9], "delet": [4, 5, 9], "popitem": [4, 5, 9], "cach": [4, 5], "memori": [4, 5], "usag": [4, 5, 9], "low": [4, 5], "discard": [4, 5, 9], "benefici": [4, 5], "exit": [4, 5], "stop": [4, 5], "all_": [4, 5], "sequenc": [4, 5], "search": [4, 5, 9], "isdisjoint": [4, 5, 9], "dict_": [4, 5], "disjoint": [4, 5], "k": [4, 5], "ei": [4, 5], "alu": [4, 5], "tem": [4, 5], "kwarg": [4, 5], "revers": [4, 5, 9], "deepcopi": [4, 5], "get_default_opt": [4, 5], "multipl": [4, 5, 9], "__copy__": [4, 5, 9], "__getattr__": [4, 5, 9], "attr": [4, 5], "__getitem__": [4, 5, 6, 9], "__setattr__": [4, 5, 9], "setattr": [4, 5], "__setitem__": [4, 5, 6, 9], "__delattr__": [4, 5, 9], "delattr": [4, 5], "__delitem__": [4, 5, 9], "__iter__": [4, 5, 7, 9], "__hash__": [4, 5, 9], "hash": [4, 5], "__eq__": [4, 5, 9], "__ne__": [4, 5, 9], "__lt__": [4, 5, 9], "__le__": [4, 5, 9], "__gt__": [4, 5, 9], "__ge__": [4, 5, 9], "__contains__": [4, 5, 9], "__len__": [4, 5, 9], "__bool__": [4, 5, 9], "__repr__": [4, 5, 9], "repr": [4, 5], "__str__": [4, 5, 9], "__iadd__": [4, 5, 9], "__add__": [4, 5, 9], "__radd__": [4, 5, 9], "__isub__": [4, 5, 9], "__sub__": [4, 5, 9], "__rsub__": [4, 5, 9], "__imul__": [4, 5, 9], "__abstractmethods__": [4, 5, 9], "__annotations__": [4, 5, 6, 7, 8, 9], "_option": [4, 5], "__dict__": [4, 5, 6, 7, 8, 9], "mappingproxi": [4, 5, 6, 7, 8], "__module__": [4, 5, 6, 7, 8, 9], "__doc__": [4, 5, 6, 7, 8], "n": [4, 5, 7], "_split_r": [4, 5], "staticmethod": [4, 5, 7], "_build_nod": [4, 5], "_put_valu": [4, 5], "_serialize_r": [4, 5], "_serializable_valu": [4, 5], "_opt": [4, 5], "_ensure_mutable_nod": [4, 5], "_get_mutable_nod": [4, 5], "_mutable_node_typ": [4, 5], "_node_typ": [4, 5], "_hash": [4, 5], "__mul__": [4, 5, 9], "__rmul__": [4, 5, 9], "__reversed__": [4, 5, 9], "__reduce__": [4, 5, 9], "__reduce_ex__": [4, 5, 9], "attribut": [4, 5, 6, 7, 8], "__weakref__": [4, 5, 6, 7, 8, 9], "_abc_impl": [4, 5], "_abc_data": [4, 5], "weak": [4, 5, 6, 7, 8], "pickl": [4, 5], "protocol": [4, 5], "filter_arg": [4, 6], "inexclud": [4, 6], "str_as_r": [4, 6], "kfil": [4, 6, 7], "tfilter": [4, 6], "visibl": [4, 6], "invert": [4, 6], "keyfilt": [4, 6], "subfilt": [4, 6], "grain": [4, 6], "exclud": [4, 6], "valid": [4, 6, 8], "evalu": [4, 6], "regex": [4, 6], "latter": [4, 6], "pattern": [4, 6], "abc": [4, 6], "stack": [4, 6], "match_nod": [4, 6, 9], "filbas": [4, 6], "valuefilt": [4, 6], "inspect": [4, 6], "entir": [4, 6], "properti": [4, 6], "match_list": [4, 6], "match_extra_filt": [4, 6], "filterediter": [4, 7], "optimal_iter": [4, 7], "__next__": [4, 7], "skip": [4, 7, 9], "ellipsistyp": [4, 8], "filterbas": 6, "share": 6, "given": [6, 7, 8, 9], "checkfilt": 6, "throw": 6, "indexerror": 6, "against": 6, "node_length": 6, "optim": 6, "filter_index": [6, 7], "filter_valu": 7, "simplest": 7, "enumer": 7, "match_kei": 7, "facilit": [7, 8], "handl": 7, "dure": 7, "type_": 8, "_specialform": 8, "verify_funct": 8, "verify_error_msg": 8, "explicitli": 8, "input": 8, "verify_error_messag": 8, "displai": 8, "repres": 8, "nicer": 8, "isc": 9, "licens": 9, "code": 9, "progress": 9, "principl": 9, "introduct": 9, "solv": 9, "overwrit": 9, "packag": 9, "submodul": 9, "style": 9, "guidelin": 9, "local": 9, "environ": 9, "submit": 9, "pull": 9, "page": 9}, "objects": {"": [[4, 0, 0, "-", "fagus"]], "fagus": [[4, 1, 1, "", "CFil"], [4, 1, 1, "", "Fagus"], [4, 1, 1, "", "Fil"], [4, 1, 1, "", "VFil"], [5, 0, 0, "-", "fagus"], [6, 0, 0, "-", "filters"], [7, 0, 0, "-", "iterators"], [8, 0, 0, "-", "utils"]], "fagus.CFil": [[4, 2, 1, "", "__init__"], [4, 3, 1, "", "__module__"], [4, 2, 1, "", "match_node"]], "fagus.Fagus": [[4, 3, 1, "", "__abstractmethods__"], [4, 2, 1, "", "__add__"], [4, 3, 1, "", "__annotations__"], [4, 2, 1, "", "__bool__"], [4, 2, 1, "", "__call__"], [4, 2, 1, "", "__contains__"], [4, 2, 1, "", "__copy__"], [4, 2, 1, "", "__delattr__"], [4, 2, 1, "", "__delitem__"], [4, 3, 1, "", "__dict__"], [4, 2, 1, "", "__eq__"], [4, 2, 1, "", "__ge__"], [4, 2, 1, "", "__getattr__"], [4, 2, 1, "", "__getitem__"], [4, 2, 1, "", "__gt__"], [4, 2, 1, "", "__hash__"], [4, 2, 1, "", "__iadd__"], [4, 2, 1, "", "__imul__"], [4, 2, 1, "", "__init__"], [4, 2, 1, "", "__isub__"], [4, 2, 1, "", "__iter__"], [4, 2, 1, "", "__le__"], [4, 2, 1, "", "__len__"], [4, 2, 1, "", "__lt__"], [4, 3, 1, "", "__module__"], [4, 2, 1, "", "__mul__"], [4, 2, 1, "", "__ne__"], [4, 2, 1, "", "__radd__"], [4, 2, 1, "", "__reduce__"], [4, 2, 1, "", "__reduce_ex__"], [4, 2, 1, "", "__repr__"], [4, 2, 1, "", "__reversed__"], [4, 2, 1, "", "__rmul__"], [4, 2, 1, "", "__rsub__"], [4, 2, 1, "", "__setattr__"], [4, 2, 1, "", "__setitem__"], [4, 2, 1, "", "__str__"], [4, 2, 1, "", "__sub__"], [4, 3, 1, "", "__weakref__"], [4, 2, 1, "", "add"], [4, 2, 1, "", "append"], [4, 2, 1, "", "child"], [4, 2, 1, "", "clear"], [4, 2, 1, "", "contains"], [4, 2, 1, "", "copy"], [4, 2, 1, "", "count"], [4, 2, 1, "", "discard"], [4, 2, 1, "", "extend"], [4, 2, 1, "", "filter"], [4, 2, 1, "", "get"], [4, 2, 1, "", "index"], [4, 2, 1, "", "insert"], [4, 2, 1, "", "isdisjoint"], [4, 2, 1, "", "items"], [4, 2, 1, "", "iter"], [4, 2, 1, "", "keys"], [4, 2, 1, "", "merge"], [4, 2, 1, "", "mod"], [4, 2, 1, "", "mod_all"], [4, 2, 1, "", "options"], [4, 2, 1, "", "pop"], [4, 2, 1, "", "popitem"], [4, 2, 1, "", "remove"], [4, 2, 1, "", "reverse"], [4, 2, 1, "", "reversed"], [4, 3, 1, "", "root"], [4, 2, 1, "", "serialize"], [4, 2, 1, "", "set"], [4, 2, 1, "", "setdefault"], [4, 2, 1, "", "split"], [4, 2, 1, "", "update"], [4, 2, 1, "", "values"]], "fagus.Fil": [[4, 3, 1, "", "__module__"]], "fagus.VFil": [[4, 2, 1, "", "__init__"], [4, 3, 1, "", "__module__"], [4, 2, 1, "", "match_node"]], "fagus.fagus": [[5, 1, 1, "", "Fagus"]], "fagus.fagus.Fagus": [[5, 3, 1, "", "__abstractmethods__"], [5, 2, 1, "", "__add__"], [5, 3, 1, "", "__annotations__"], [5, 2, 1, "", "__bool__"], [5, 2, 1, "", "__call__"], [5, 2, 1, "", "__contains__"], [5, 2, 1, "", "__copy__"], [5, 2, 1, "", "__delattr__"], [5, 2, 1, "", "__delitem__"], [5, 3, 1, "", "__dict__"], [5, 2, 1, "", "__eq__"], [5, 2, 1, "", "__ge__"], [5, 2, 1, "", "__getattr__"], [5, 2, 1, "", "__getitem__"], [5, 2, 1, "", "__gt__"], [5, 2, 1, "", "__hash__"], [5, 2, 1, "", "__iadd__"], [5, 2, 1, "", "__imul__"], [5, 2, 1, "", "__init__"], [5, 2, 1, "", "__isub__"], [5, 2, 1, "", "__iter__"], [5, 2, 1, "", "__le__"], [5, 2, 1, "", "__len__"], [5, 2, 1, "", "__lt__"], [5, 3, 1, "", "__module__"], [5, 2, 1, "", "__mul__"], [5, 2, 1, "", "__ne__"], [5, 2, 1, "", "__radd__"], [5, 2, 1, "", "__reduce__"], [5, 2, 1, "", "__reduce_ex__"], [5, 2, 1, "", "__repr__"], [5, 2, 1, "", "__reversed__"], [5, 2, 1, "", "__rmul__"], [5, 2, 1, "", "__rsub__"], [5, 2, 1, "", "__setattr__"], [5, 2, 1, "", "__setitem__"], [5, 2, 1, "", "__str__"], [5, 2, 1, "", "__sub__"], [5, 3, 1, "", "__weakref__"], [5, 2, 1, "", "add"], [5, 2, 1, "", "append"], [5, 2, 1, "", "child"], [5, 2, 1, "", "clear"], [5, 2, 1, "", "contains"], [5, 2, 1, "", "copy"], [5, 2, 1, "", "count"], [5, 2, 1, "", "discard"], [5, 2, 1, "", "extend"], [5, 2, 1, "", "filter"], [5, 2, 1, "", "get"], [5, 2, 1, "", "index"], [5, 2, 1, "", "insert"], [5, 2, 1, "", "isdisjoint"], [5, 2, 1, "", "items"], [5, 2, 1, "", "iter"], [5, 2, 1, "", "keys"], [5, 2, 1, "", "merge"], [5, 2, 1, "", "mod"], [5, 2, 1, "", "mod_all"], [5, 2, 1, "", "options"], [5, 2, 1, "", "pop"], [5, 2, 1, "", "popitem"], [5, 2, 1, "", "remove"], [5, 2, 1, "", "reverse"], [5, 2, 1, "", "reversed"], [5, 3, 1, "", "root"], [5, 2, 1, "", "serialize"], [5, 2, 1, "", "set"], [5, 2, 1, "", "setdefault"], [5, 2, 1, "", "split"], [5, 2, 1, "", "update"], [5, 2, 1, "", "values"]], "fagus.filters": [[6, 1, 1, "", "CFil"], [6, 1, 1, "", "Fil"], [6, 1, 1, "", "FilBase"], [6, 1, 1, "", "KFil"], [6, 1, 1, "", "VFil"]], "fagus.filters.CFil": [[6, 3, 1, "", "__annotations__"], [6, 2, 1, "", "__init__"], [6, 3, 1, "", "__module__"], [6, 2, 1, "", "match_node"]], "fagus.filters.Fil": [[6, 3, 1, "", "__annotations__"], [6, 3, 1, "", "__module__"]], "fagus.filters.FilBase": [[6, 3, 1, "", "__dict__"], [6, 2, 1, "", "__init__"], [6, 3, 1, "", "__module__"], [6, 3, 1, "", "__weakref__"], [6, 2, 1, "", "included"], [6, 2, 1, "", "match_node"]], "fagus.filters.KFil": [[6, 2, 1, "", "__getitem__"], [6, 2, 1, "", "__init__"], [6, 3, 1, "", "__module__"], [6, 2, 1, "", "__setitem__"], [6, 2, 1, "", "match"], [6, 2, 1, "", "match_extra_filters"], [6, 2, 1, "", "match_list"]], "fagus.filters.VFil": [[6, 3, 1, "", "__annotations__"], [6, 2, 1, "", "__init__"], [6, 3, 1, "", "__module__"], [6, 2, 1, "", "match_node"]], "fagus.iterators": [[7, 1, 1, "", "FagusIterator"], [7, 1, 1, "", "FilteredIterator"]], "fagus.iterators.FagusIterator": [[7, 3, 1, "", "__dict__"], [7, 2, 1, "", "__init__"], [7, 2, 1, "", "__iter__"], [7, 3, 1, "", "__module__"], [7, 2, 1, "", "__next__"], [7, 3, 1, "", "__weakref__"], [7, 2, 1, "", "skip"]], "fagus.iterators.FilteredIterator": [[7, 3, 1, "", "__dict__"], [7, 2, 1, "", "__init__"], [7, 2, 1, "", "__iter__"], [7, 3, 1, "", "__module__"], [7, 2, 1, "", "__next__"], [7, 3, 1, "", "__weakref__"], [7, 2, 1, "", "optimal_iterator"]], "fagus.utils": [[8, 3, 1, "", "EllipsisType"], [8, 1, 1, "", "FagusOption"], [8, 4, 1, "", "OptAny"], [8, 4, 1, "", "OptBool"], [8, 4, 1, "", "OptInt"], [8, 4, 1, "", "OptStr"]], "fagus.utils.FagusOption": [[8, 3, 1, "", "__dict__"], [8, 2, 1, "", "__init__"], [8, 3, 1, "", "__module__"], [8, 3, 1, "", "__weakref__"], [8, 2, 1, "", "verify"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:attribute", "4": "py:data"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "data", "Python data"]}, "titleterms": {"changelog": 0, "contribut": 1, "fagu": [1, 3, 4, 5, 6, 7, 8, 9], "principl": [1, 3], "how": 1, "can": [1, 3], "i": [1, 3], "report": 1, "bug": 1, "befor": 1, "submit": 1, "A": 1, "do": 1, "good": 1, "request": 1, "new": [1, 3], "featur": 1, "develop": 1, "softwar": 1, "depend": 1, "For": 1, "code": [1, 3], "style": 1, "guidelin": 1, "set": [1, 3], "up": 1, "local": 1, "environ": 1, "pull": 1, "test": [1, 3], "commit": 1, "us": 1, "pre": 1, "commitizen": 1, "releas": 1, "packag": [1, 4], "pypi": 1, "isc": 2, "licens": 2, "readi": 3, "document": [3, 9], "still": 3, "work": 3, "IN": 3, "progress": 3, "basic": 3, "introduct": 3, "what": 3, "solv": 3, "The": 3, "path": 3, "paramet": 3, "static": 3, "instanc": 3, "usag": 3, "option": 3, "default": 3, "default_node_typ": 3, "if_": 3, "iter_fil": 3, "iter_nod": 3, "list_insert": 3, "node_typ": 3, "path_split": 3, "modifi": 3, "tree": 3, "correctli": 3, "handl": 3, "list": 3, "indic": [3, 9], "creat": 3, "correct": 3, "type": 3, "node": 3, "ensur": 3, "requir": 3, "ad": 3, "overwrit": 3, "element": 3, "append": 3, "extend": 3, "multipl": 3, "insert": 3, "an": 3, "given": 3, "index": 3, "add": 3, "updat": 3, "dict": 3, "remov": 3, "delet": 3, "pop": 3, "serial": 3, "json": 3, "yaml": 3, "serializ": 3, "mod": 3, "iter": [3, 7], "over": 3, "nest": 3, "object": 3, "skip": 3, "filter": [3, 6], "submodul": 4, "modul": [5, 6, 7, 8], "util": 8, "welcom": 9, "": 9, "content": 9, "tabl": 9}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx": 57}, "alltitles": {"Changelog": [[0, "changelog"]], "Contributing to Fagus": [[1, "contributing-to-fagus"]], "Fagus Principles": [[1, "fagus-principles"]], "How Can I Contribute?": [[1, "how-can-i-contribute"]], "Reporting Bugs": [[1, "reporting-bugs"]], "Before Submitting A Bug Report": [[1, "before-submitting-a-bug-report"]], "How Do I Submit A (Good) Bug Report?": [[1, "how-do-i-submit-a-good-bug-report"]], "Requesting New Features": [[1, "requesting-new-features"]], "Before Submitting A Feature Request": [[1, "before-submitting-a-feature-request"]], "How Do I Submit A (Good) Feature Request?": [[1, "how-do-i-submit-a-good-feature-request"]], "Developing Fagus": [[1, "developing-fagus"]], "Software Dependencies For Development": [[1, "software-dependencies-for-development"]], "Code Styling Guidelines": [[1, "code-styling-guidelines"]], "Setting Up A Local Fagus Developing Environment": [[1, "setting-up-a-local-fagus-developing-environment"]], "Submitting Pull Requests for Fagus": [[1, "submitting-pull-requests-for-fagus"]], "Tests": [[1, "tests"]], "Committing using pre-commit and commitizen": [[1, "committing-using-pre-commit-and-commitizen"]], "Releasing A New Fagus Package on PyPi": [[1, "releasing-a-new-fagus-package-on-pypi"]], "ISC License": [[2, "isc-license"]], "Fagus": [[3, "fagus"]], "Code and tests ready, documentation still WORK IN PROGRESS": [[3, "code-and-tests-ready-documentation-still-work-in-progress"]], "Basic principles": [[3, "basic-principles"]], "Introduction \u2013 What it solves": [[3, "introduction-what-it-solves"]], "The path-parameter": [[3, "the-path-parameter"]], "Static and instance usage": [[3, "static-and-instance-usage"]], "Fagus options": [[3, "fagus-options"]], "default": [[3, "default"]], "default_node_type": [[3, "default-node-type"]], "if_": [[3, "if"]], "iter_fill": [[3, "iter-fill"]], "iter_nodes": [[3, "iter-nodes"]], "list_insert": [[3, "list-insert"]], "node_types": [[3, "node-types"]], "path_split": [[3, "path-split"]], "Modifying the tree": [[3, "modifying-the-tree"]], "Basic principles for modifying the tree": [[3, "basic-principles-for-modifying-the-tree"]], "Correctly handling list indices": [[3, "correctly-handling-list-indices"]], "Create the correct type of node": [[3, "create-the-correct-type-of-node"]], "Ensure that the required node can be modified": [[3, "ensure-that-the-required-node-can-be-modified"]], "set() \u2013 adding and overwriting elements": [[3, "set-adding-and-overwriting-elements"]], "append() \u2013 adding a new element to a list": [[3, "append-adding-a-new-element-to-a-list"]], "extend() \u2013 extending a list with multiple elements": [[3, "extend-extending-a-list-with-multiple-elements"]], "insert() \u2013 insert an element at a given index in a list": [[3, "insert-insert-an-element-at-a-given-index-in-a-list"]], "add() \u2013 adding a new element to a set": [[3, "add-adding-a-new-element-to-a-set"]], "update() \u2013 update multiple elements in a set or dict": [[3, "update-update-multiple-elements-in-a-set-or-dict"]], "remove(), delete() and pop()": [[3, "remove-delete-and-pop"]], "serialize() \u2013 ensure that a tree is json- or yaml-serializable": [[3, "serialize-ensure-that-a-tree-is-json-or-yaml-serializable"]], "mod() \u2013 modifying elements": [[3, "mod-modifying-elements"]], "Iterating over nested objects": [[3, "iterating-over-nested-objects"]], "Skipping nodes in iteration.": [[3, "skipping-nodes-in-iteration"]], "Filtering nested objects": [[3, "filtering-nested-objects"]], "fagus package": [[4, "module-fagus"]], "Submodules": [[4, "submodules"]], "fagus.fagus module": [[5, "module-fagus.fagus"]], "fagus.filters module": [[6, "module-fagus.filters"]], "fagus.iterators module": [[7, "module-fagus.iterators"]], "fagus.utils module": [[8, "module-fagus.utils"]], "Welcome to Fagus\u2019s documentation!": [[9, "welcome-to-fagus-s-documentation"]], "Contents:": [[9, null]], "Indices and tables": [[9, "indices-and-tables"]]}, "indexentries": {"cfil (class in fagus)": [[4, "fagus.CFil"]], "fagus (class in fagus)": [[4, "fagus.Fagus"]], "fil (class in fagus)": [[4, "fagus.Fil"]], "vfil (class in fagus)": [[4, "fagus.VFil"]], "__abstractmethods__ (fagus.fagus attribute)": [[4, "fagus.Fagus.__abstractmethods__"]], "__add__() (fagus.fagus method)": [[4, "fagus.Fagus.__add__"]], "__annotations__ (fagus.fagus attribute)": [[4, "fagus.Fagus.__annotations__"]], "__bool__() (fagus.fagus method)": [[4, "fagus.Fagus.__bool__"]], "__call__() (fagus.fagus method)": [[4, "fagus.Fagus.__call__"]], "__contains__() (fagus.fagus method)": [[4, "fagus.Fagus.__contains__"]], "__copy__() (fagus.fagus method)": [[4, "fagus.Fagus.__copy__"]], "__delattr__() (fagus.fagus method)": [[4, "fagus.Fagus.__delattr__"]], "__delitem__() (fagus.fagus method)": [[4, "fagus.Fagus.__delitem__"]], "__dict__ (fagus.fagus attribute)": [[4, "fagus.Fagus.__dict__"]], "__eq__() (fagus.fagus method)": [[4, "fagus.Fagus.__eq__"]], "__ge__() (fagus.fagus method)": [[4, "fagus.Fagus.__ge__"]], "__getattr__() (fagus.fagus method)": [[4, "fagus.Fagus.__getattr__"]], "__getitem__() (fagus.fagus method)": [[4, "fagus.Fagus.__getitem__"]], "__gt__() (fagus.fagus method)": [[4, "fagus.Fagus.__gt__"]], "__hash__() (fagus.fagus method)": [[4, "fagus.Fagus.__hash__"]], "__iadd__() (fagus.fagus method)": [[4, "fagus.Fagus.__iadd__"]], "__imul__() (fagus.fagus method)": [[4, "fagus.Fagus.__imul__"]], "__init__() (fagus.cfil method)": [[4, "fagus.CFil.__init__"]], "__init__() (fagus.fagus method)": [[4, "fagus.Fagus.__init__"]], "__init__() (fagus.vfil method)": [[4, "fagus.VFil.__init__"]], "__isub__() (fagus.fagus method)": [[4, "fagus.Fagus.__isub__"]], "__iter__() (fagus.fagus method)": [[4, "fagus.Fagus.__iter__"]], "__le__() (fagus.fagus method)": [[4, "fagus.Fagus.__le__"]], "__len__() (fagus.fagus method)": [[4, "fagus.Fagus.__len__"]], "__lt__() (fagus.fagus method)": [[4, "fagus.Fagus.__lt__"]], "__module__ (fagus.cfil attribute)": [[4, "fagus.CFil.__module__"]], "__module__ (fagus.fagus attribute)": [[4, "fagus.Fagus.__module__"]], "__module__ (fagus.fil attribute)": [[4, "fagus.Fil.__module__"]], "__module__ (fagus.vfil attribute)": [[4, "fagus.VFil.__module__"]], "__mul__() (fagus.fagus method)": [[4, "fagus.Fagus.__mul__"]], "__ne__() (fagus.fagus method)": [[4, "fagus.Fagus.__ne__"]], "__radd__() (fagus.fagus method)": [[4, "fagus.Fagus.__radd__"]], "__reduce__() (fagus.fagus method)": [[4, "fagus.Fagus.__reduce__"]], "__reduce_ex__() (fagus.fagus method)": [[4, "fagus.Fagus.__reduce_ex__"]], "__repr__() (fagus.fagus method)": [[4, "fagus.Fagus.__repr__"]], "__reversed__() (fagus.fagus method)": [[4, "fagus.Fagus.__reversed__"]], "__rmul__() (fagus.fagus method)": [[4, "fagus.Fagus.__rmul__"]], "__rsub__() (fagus.fagus method)": [[4, "fagus.Fagus.__rsub__"]], "__setattr__() (fagus.fagus method)": [[4, "fagus.Fagus.__setattr__"]], "__setitem__() (fagus.fagus method)": [[4, "fagus.Fagus.__setitem__"]], "__str__() (fagus.fagus method)": [[4, "fagus.Fagus.__str__"]], "__sub__() (fagus.fagus method)": [[4, "fagus.Fagus.__sub__"]], "__weakref__ (fagus.fagus attribute)": [[4, "fagus.Fagus.__weakref__"]], "add() (fagus.fagus method)": [[4, "fagus.Fagus.add"]], "append() (fagus.fagus method)": [[4, "fagus.Fagus.append"]], "child() (fagus.fagus method)": [[4, "fagus.Fagus.child"]], "clear() (fagus.fagus method)": [[4, "fagus.Fagus.clear"]], "contains() (fagus.fagus method)": [[4, "fagus.Fagus.contains"]], "copy() (fagus.fagus method)": [[4, "fagus.Fagus.copy"]], "count() (fagus.fagus method)": [[4, "fagus.Fagus.count"]], "discard() (fagus.fagus method)": [[4, "fagus.Fagus.discard"]], "extend() (fagus.fagus method)": [[4, "fagus.Fagus.extend"]], "fagus": [[4, "module-fagus"]], "filter() (fagus.fagus method)": [[4, "fagus.Fagus.filter"]], "get() (fagus.fagus method)": [[4, "fagus.Fagus.get"]], "index() (fagus.fagus method)": [[4, "fagus.Fagus.index"]], "insert() (fagus.fagus method)": [[4, "fagus.Fagus.insert"]], "isdisjoint() (fagus.fagus method)": [[4, "fagus.Fagus.isdisjoint"]], "items() (fagus.fagus method)": [[4, "fagus.Fagus.items"]], "iter() (fagus.fagus method)": [[4, "fagus.Fagus.iter"]], "keys() (fagus.fagus method)": [[4, "fagus.Fagus.keys"]], "match_node() (fagus.cfil method)": [[4, "fagus.CFil.match_node"]], "match_node() (fagus.vfil method)": [[4, "fagus.VFil.match_node"]], "merge() (fagus.fagus method)": [[4, "fagus.Fagus.merge"]], "mod() (fagus.fagus method)": [[4, "fagus.Fagus.mod"]], "mod_all() (fagus.fagus method)": [[4, "fagus.Fagus.mod_all"]], "module": [[4, "module-fagus"], [5, "module-fagus.fagus"], [6, "module-fagus.filters"], [7, "module-fagus.iterators"], [8, "module-fagus.utils"]], "options() (fagus.fagus method)": [[4, "fagus.Fagus.options"]], "pop() (fagus.fagus method)": [[4, "fagus.Fagus.pop"]], "popitem() (fagus.fagus method)": [[4, "fagus.Fagus.popitem"]], "remove() (fagus.fagus method)": [[4, "fagus.Fagus.remove"]], "reverse() (fagus.fagus method)": [[4, "fagus.Fagus.reverse"]], "reversed() (fagus.fagus method)": [[4, "fagus.Fagus.reversed"]], "root (fagus.fagus attribute)": [[4, "fagus.Fagus.root"]], "serialize() (fagus.fagus method)": [[4, "fagus.Fagus.serialize"]], "set() (fagus.fagus method)": [[4, "fagus.Fagus.set"]], "setdefault() (fagus.fagus method)": [[4, "fagus.Fagus.setdefault"]], "split() (fagus.fagus method)": [[4, "fagus.Fagus.split"]], "update() (fagus.fagus method)": [[4, "fagus.Fagus.update"]], "values() (fagus.fagus method)": [[4, "fagus.Fagus.values"]], "fagus (class in fagus.fagus)": [[5, "fagus.fagus.Fagus"]], "__abstractmethods__ (fagus.fagus.fagus attribute)": [[5, "fagus.fagus.Fagus.__abstractmethods__"]], "__add__() (fagus.fagus.fagus method)": [[5, "fagus.fagus.Fagus.__add__"]], "__annotations__ (fagus.fagus.fagus attribute)": [[5, "fagus.fagus.Fagus.__annotations__"]], "__bool__() (fagus.fagus.fagus method)": [[5, "fagus.fagus.Fagus.__bool__"]], "__call__() (fagus.fagus.fagus method)": [[5, "fagus.fagus.Fagus.__call__"]], "__contains__() (fagus.fagus.fagus method)": [[5, "fagus.fagus.Fagus.__contains__"]], "__copy__() (fagus.fagus.fagus method)": [[5, "fagus.fagus.Fagus.__copy__"]], "__delattr__() (fagus.fagus.fagus method)": [[5, "fagus.fagus.Fagus.__delattr__"]], "__delitem__() (fagus.fagus.fagus method)": [[5, "fagus.fagus.Fagus.__delitem__"]], "__dict__ (fagus.fagus.fagus attribute)": [[5, "fagus.fagus.Fagus.__dict__"]], "__eq__() (fagus.fagus.fagus method)": [[5, "fagus.fagus.Fagus.__eq__"]], "__ge__() (fagus.fagus.fagus method)": [[5, "fagus.fagus.Fagus.__ge__"]], "__getattr__() (fagus.fagus.fagus method)": [[5, "fagus.fagus.Fagus.__getattr__"]], "__getitem__() (fagus.fagus.fagus method)": [[5, "fagus.fagus.Fagus.__getitem__"]], "__gt__() (fagus.fagus.fagus method)": [[5, "fagus.fagus.Fagus.__gt__"]], "__hash__() (fagus.fagus.fagus method)": [[5, "fagus.fagus.Fagus.__hash__"]], "__iadd__() (fagus.fagus.fagus method)": [[5, "fagus.fagus.Fagus.__iadd__"]], "__imul__() (fagus.fagus.fagus method)": [[5, "fagus.fagus.Fagus.__imul__"]], "__init__() (fagus.fagus.fagus method)": [[5, "fagus.fagus.Fagus.__init__"]], "__isub__() (fagus.fagus.fagus method)": [[5, "fagus.fagus.Fagus.__isub__"]], "__iter__() (fagus.fagus.fagus method)": [[5, "fagus.fagus.Fagus.__iter__"]], "__le__() (fagus.fagus.fagus method)": [[5, "fagus.fagus.Fagus.__le__"]], "__len__() (fagus.fagus.fagus method)": [[5, "fagus.fagus.Fagus.__len__"]], "__lt__() (fagus.fagus.fagus method)": [[5, "fagus.fagus.Fagus.__lt__"]], "__module__ (fagus.fagus.fagus attribute)": [[5, "fagus.fagus.Fagus.__module__"]], "__mul__() (fagus.fagus.fagus method)": [[5, "fagus.fagus.Fagus.__mul__"]], "__ne__() (fagus.fagus.fagus method)": [[5, "fagus.fagus.Fagus.__ne__"]], "__radd__() (fagus.fagus.fagus method)": [[5, "fagus.fagus.Fagus.__radd__"]], "__reduce__() (fagus.fagus.fagus method)": [[5, "fagus.fagus.Fagus.__reduce__"]], "__reduce_ex__() (fagus.fagus.fagus method)": [[5, "fagus.fagus.Fagus.__reduce_ex__"]], "__repr__() (fagus.fagus.fagus method)": [[5, "fagus.fagus.Fagus.__repr__"]], "__reversed__() (fagus.fagus.fagus method)": [[5, "fagus.fagus.Fagus.__reversed__"]], "__rmul__() (fagus.fagus.fagus method)": [[5, "fagus.fagus.Fagus.__rmul__"]], "__rsub__() (fagus.fagus.fagus method)": [[5, "fagus.fagus.Fagus.__rsub__"]], "__setattr__() (fagus.fagus.fagus method)": [[5, "fagus.fagus.Fagus.__setattr__"]], "__setitem__() (fagus.fagus.fagus method)": [[5, "fagus.fagus.Fagus.__setitem__"]], "__str__() (fagus.fagus.fagus method)": [[5, "fagus.fagus.Fagus.__str__"]], "__sub__() (fagus.fagus.fagus method)": [[5, "fagus.fagus.Fagus.__sub__"]], "__weakref__ (fagus.fagus.fagus attribute)": [[5, "fagus.fagus.Fagus.__weakref__"]], "add() (fagus.fagus.fagus method)": [[5, "fagus.fagus.Fagus.add"]], "append() (fagus.fagus.fagus method)": [[5, "fagus.fagus.Fagus.append"]], "child() (fagus.fagus.fagus method)": [[5, "fagus.fagus.Fagus.child"]], "clear() (fagus.fagus.fagus method)": [[5, "fagus.fagus.Fagus.clear"]], "contains() (fagus.fagus.fagus method)": [[5, "fagus.fagus.Fagus.contains"]], "copy() (fagus.fagus.fagus method)": [[5, "fagus.fagus.Fagus.copy"]], "count() (fagus.fagus.fagus method)": [[5, "fagus.fagus.Fagus.count"]], "discard() (fagus.fagus.fagus method)": [[5, "fagus.fagus.Fagus.discard"]], "extend() (fagus.fagus.fagus method)": [[5, "fagus.fagus.Fagus.extend"]], "fagus.fagus": [[5, "module-fagus.fagus"]], "filter() (fagus.fagus.fagus method)": [[5, "fagus.fagus.Fagus.filter"]], "get() (fagus.fagus.fagus method)": [[5, "fagus.fagus.Fagus.get"]], "index() (fagus.fagus.fagus method)": [[5, "fagus.fagus.Fagus.index"]], "insert() (fagus.fagus.fagus method)": [[5, "fagus.fagus.Fagus.insert"]], "isdisjoint() (fagus.fagus.fagus method)": [[5, "fagus.fagus.Fagus.isdisjoint"]], "items() (fagus.fagus.fagus method)": [[5, "fagus.fagus.Fagus.items"]], "iter() (fagus.fagus.fagus method)": [[5, "fagus.fagus.Fagus.iter"]], "keys() (fagus.fagus.fagus method)": [[5, "fagus.fagus.Fagus.keys"]], "merge() (fagus.fagus.fagus method)": [[5, "fagus.fagus.Fagus.merge"]], "mod() (fagus.fagus.fagus method)": [[5, "fagus.fagus.Fagus.mod"]], "mod_all() (fagus.fagus.fagus method)": [[5, "fagus.fagus.Fagus.mod_all"]], "options() (fagus.fagus.fagus method)": [[5, "fagus.fagus.Fagus.options"]], "pop() (fagus.fagus.fagus method)": [[5, "fagus.fagus.Fagus.pop"]], "popitem() (fagus.fagus.fagus method)": [[5, "fagus.fagus.Fagus.popitem"]], "remove() (fagus.fagus.fagus method)": [[5, "fagus.fagus.Fagus.remove"]], "reverse() (fagus.fagus.fagus method)": [[5, "fagus.fagus.Fagus.reverse"]], "reversed() (fagus.fagus.fagus method)": [[5, "fagus.fagus.Fagus.reversed"]], "root (fagus.fagus.fagus attribute)": [[5, "fagus.fagus.Fagus.root"]], "serialize() (fagus.fagus.fagus method)": [[5, "fagus.fagus.Fagus.serialize"]], "set() (fagus.fagus.fagus method)": [[5, "fagus.fagus.Fagus.set"]], "setdefault() (fagus.fagus.fagus method)": [[5, "fagus.fagus.Fagus.setdefault"]], "split() (fagus.fagus.fagus method)": [[5, "fagus.fagus.Fagus.split"]], "update() (fagus.fagus.fagus method)": [[5, "fagus.fagus.Fagus.update"]], "values() (fagus.fagus.fagus method)": [[5, "fagus.fagus.Fagus.values"]], "cfil (class in fagus.filters)": [[6, "fagus.filters.CFil"]], "fil (class in fagus.filters)": [[6, "fagus.filters.Fil"]], "filbase (class in fagus.filters)": [[6, "fagus.filters.FilBase"]], "kfil (class in fagus.filters)": [[6, "fagus.filters.KFil"]], "vfil (class in fagus.filters)": [[6, "fagus.filters.VFil"]], "__annotations__ (fagus.filters.cfil attribute)": [[6, "fagus.filters.CFil.__annotations__"]], "__annotations__ (fagus.filters.fil attribute)": [[6, "fagus.filters.Fil.__annotations__"]], "__annotations__ (fagus.filters.vfil attribute)": [[6, "fagus.filters.VFil.__annotations__"]], "__dict__ (fagus.filters.filbase attribute)": [[6, "fagus.filters.FilBase.__dict__"]], "__getitem__() (fagus.filters.kfil method)": [[6, "fagus.filters.KFil.__getitem__"]], "__init__() (fagus.filters.cfil method)": [[6, "fagus.filters.CFil.__init__"]], "__init__() (fagus.filters.filbase method)": [[6, "fagus.filters.FilBase.__init__"]], "__init__() (fagus.filters.kfil method)": [[6, "fagus.filters.KFil.__init__"]], "__init__() (fagus.filters.vfil method)": [[6, "fagus.filters.VFil.__init__"]], "__module__ (fagus.filters.cfil attribute)": [[6, "fagus.filters.CFil.__module__"]], "__module__ (fagus.filters.fil attribute)": [[6, "fagus.filters.Fil.__module__"]], "__module__ (fagus.filters.filbase attribute)": [[6, "fagus.filters.FilBase.__module__"]], "__module__ (fagus.filters.kfil attribute)": [[6, "fagus.filters.KFil.__module__"]], "__module__ (fagus.filters.vfil attribute)": [[6, "fagus.filters.VFil.__module__"]], "__setitem__() (fagus.filters.kfil method)": [[6, "fagus.filters.KFil.__setitem__"]], "__weakref__ (fagus.filters.filbase attribute)": [[6, "fagus.filters.FilBase.__weakref__"]], "fagus.filters": [[6, "module-fagus.filters"]], "included() (fagus.filters.filbase method)": [[6, "fagus.filters.FilBase.included"]], "match() (fagus.filters.kfil method)": [[6, "fagus.filters.KFil.match"]], "match_extra_filters() (fagus.filters.kfil method)": [[6, "fagus.filters.KFil.match_extra_filters"]], "match_list() (fagus.filters.kfil method)": [[6, "fagus.filters.KFil.match_list"]], "match_node() (fagus.filters.cfil method)": [[6, "fagus.filters.CFil.match_node"]], "match_node() (fagus.filters.filbase method)": [[6, "fagus.filters.FilBase.match_node"]], "match_node() (fagus.filters.vfil method)": [[6, "fagus.filters.VFil.match_node"]], "fagusiterator (class in fagus.iterators)": [[7, "fagus.iterators.FagusIterator"]], "filterediterator (class in fagus.iterators)": [[7, "fagus.iterators.FilteredIterator"]], "__dict__ (fagus.iterators.fagusiterator attribute)": [[7, "fagus.iterators.FagusIterator.__dict__"]], "__dict__ (fagus.iterators.filterediterator attribute)": [[7, "fagus.iterators.FilteredIterator.__dict__"]], "__init__() (fagus.iterators.fagusiterator method)": [[7, "fagus.iterators.FagusIterator.__init__"]], "__init__() (fagus.iterators.filterediterator method)": [[7, "fagus.iterators.FilteredIterator.__init__"]], "__iter__() (fagus.iterators.fagusiterator method)": [[7, "fagus.iterators.FagusIterator.__iter__"]], "__iter__() (fagus.iterators.filterediterator method)": [[7, "fagus.iterators.FilteredIterator.__iter__"]], "__module__ (fagus.iterators.fagusiterator attribute)": [[7, "fagus.iterators.FagusIterator.__module__"]], "__module__ (fagus.iterators.filterediterator attribute)": [[7, "fagus.iterators.FilteredIterator.__module__"]], "__next__() (fagus.iterators.fagusiterator method)": [[7, "fagus.iterators.FagusIterator.__next__"]], "__next__() (fagus.iterators.filterediterator method)": [[7, "fagus.iterators.FilteredIterator.__next__"]], "__weakref__ (fagus.iterators.fagusiterator attribute)": [[7, "fagus.iterators.FagusIterator.__weakref__"]], "__weakref__ (fagus.iterators.filterediterator attribute)": [[7, "fagus.iterators.FilteredIterator.__weakref__"]], "fagus.iterators": [[7, "module-fagus.iterators"]], "optimal_iterator() (fagus.iterators.filterediterator static method)": [[7, "fagus.iterators.FilteredIterator.optimal_iterator"]], "skip() (fagus.iterators.fagusiterator method)": [[7, "fagus.iterators.FagusIterator.skip"]], "ellipsistype (in module fagus.utils)": [[8, "fagus.utils.EllipsisType"]], "fagusoption (class in fagus.utils)": [[8, "fagus.utils.FagusOption"]], "optany (in module fagus.utils)": [[8, "fagus.utils.OptAny"]], "optbool (in module fagus.utils)": [[8, "fagus.utils.OptBool"]], "optint (in module fagus.utils)": [[8, "fagus.utils.OptInt"]], "optstr (in module fagus.utils)": [[8, "fagus.utils.OptStr"]], "__dict__ (fagus.utils.fagusoption attribute)": [[8, "fagus.utils.FagusOption.__dict__"]], "__init__() (fagus.utils.fagusoption method)": [[8, "fagus.utils.FagusOption.__init__"]], "__module__ (fagus.utils.fagusoption attribute)": [[8, "fagus.utils.FagusOption.__module__"]], "__weakref__ (fagus.utils.fagusoption attribute)": [[8, "fagus.utils.FagusOption.__weakref__"]], "fagus.utils": [[8, "module-fagus.utils"]], "verify() (fagus.utils.fagusoption method)": [[8, "fagus.utils.FagusOption.verify"]]}})
